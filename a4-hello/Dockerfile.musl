FROM alpine

RUN apk update && apk add git cmake make pkgconfig file nano zip unzip

# Musl
ARG MUSL_ARCH=aarch64
#ARG MUSL_ARCH=i686
#ARG MUSL_ARCH=x86_64
RUN cd /tmp ; wget https://musl.cc/${MUSL_ARCH}-linux-musl-native.tgz \
&& cd /usr/local ; tar -zxf /tmp/${MUSL_ARCH}-linux-musl-native.tgz \
&& ln -sf /usr/local/${MUSL_ARCH}-linux-musl-native/lib/libc.so /usr/local/${MUSL_ARCH}-linux-musl-native/bin/ldd \
&& ln -sf /usr/local/${MUSL_ARCH}-linux-musl-native/lib/libc.so /lib/ld-musl-${MUSL_ARCH}.so.1 \
&& ln -sf /usr/local/${MUSL_ARCH}-linux-musl-native/lib/libc.so /lib/ld-musl-i386.so.1
ENV PATH="/usr/local/${MUSL_ARCH}-linux-musl-native/bin:$PATH"

# allegro 4 - gcc a4.c -o a4 --static `pkg-config --libs --cflags --static allegro`
ARG ALLEGRO4_VERSION=4.4.3.1
RUN mkdir /tmp/a4 && cd /tmp/a4 \
&& git clone https://github.com/liballeg/allegro5 . \
&& git checkout ${ALLEGRO4_VERSION} \
&& cmake -DCMAKE_C_FLAGS="-static -Os" -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DSHARED=OFF -DWANT_EXAMPLES=OFF -DWANT_TESTS=OFF -DCMAKE_BUILD_TYPE=Debug . \
&& make -j`nproc` && make install \
&& cmake -DCMAKE_C_FLAGS="-static -Os" -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DSHARED=OFF -DWANT_EXAMPLES=OFF -DWANT_TESTS=OFF -DCMAKE_BUILD_TYPE=Release . \
&& make -j`nproc` && make install

ENV LD_LIBRARY_PATH="/usr/local/${MUSL_ARCH}-linux-musl-native/lib:/usr/local/lib"
